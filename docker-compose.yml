version: "3.8"
services:
	# 服务名称
	boot-demo-8089:
	 # Dockerfile所在目录(. 表示同级目录下)
	 build: .
	 # 镜像名称
	 image: boot-demo-8089
	 # 容器名称
	 container_name: boot-demo-8089
	 restart: always
	 # 端口
	 ports:
	      - "8089:8089"
	 # 挂载
	 volumes:
	      - /home/server/boot-demo-test/boot-demo-8089/logs:/usr/local/application/logs
     # 与boot-demo-8088相比修改Dockerfile中的ENV环境变量(多个变量不加`-`直接换行即可，参数不能有空格)
	 environment:
	      SERVER_NAME: "this-is-boot-demo-8089"

  nginx:      #定义nginx服务
    hostname: nginx      #容器的主机名为nginx
    build:               #定义创建容器的过程 //如果有线程的镜像，直接写images: 
      context: ./nginx   #指定创建容器的目录位置(存储dockerfile的目录)
      dockerfile: Dockerfile   #指定Dockerfile文件
    ports:            #定义端口
      - 1234:80       #暴露端口
      - 4321:443      #暴露端口
    networks:                      #指定网络
      ydq:                         #指定网络名称
        ipv4_address: 172.100.0.10  #指定ip地址
    volumes:                                 #数据卷，挂载目录
      - ./wwwroot:/usr/local/nginx/html      #前面宿主机，后面容器
networks:               #自定义网络
  ydq:                  #自定义网络名称
   driver: bridge       #自定义网络模式
   ipam:                #网络管理器
     config:            #配置参数
       - subnet: 172.100.0.0/16    #配置子网网段 